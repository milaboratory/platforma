assets := import("@platforma-sdk/workflow-tengo:assets")
self := import("@platforma-sdk/workflow-tengo:tpl")
pkg := import("@platforma-sdk/workflow-tengo:exec.package")
render := import("@platforma-sdk/workflow-tengo:render")
maps := import("@platforma-sdk/workflow-tengo:maps")
json := import("json")

sw := assets.importSoftware(":exec.test.pkg.sleep")

self.defineOutputs(["installed", "descriptor"])

self.body(func(inputs) {
	if (maps.containsKey(inputs, "software")) {
		software := inputs["software"]

		return {
			installed: software.kvGetAsJson("ctl/runner/package/installation"),
			descriptor: software.kvGetAsJson(pkg.META_KEY_DESCRIPTOR)
		}
	}

	binaryDescriptor := sw.descriptor.binary

	archive := pkg.get(binaryDescriptor.registry, binaryDescriptor.package).archive()

	self.delegate(
		self.template(),
		{
			software: pkg.install(archive).package()
		},
		["installed", "descriptor"]
	)

	return {}
})
