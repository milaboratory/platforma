// agg_body_pure

self := import("@platforma-sdk/workflow-tengo:tpl")
smart := import("@platforma-sdk/workflow-tengo:smart")

ll := import("@platforma-sdk/workflow-tengo:ll")
pConstants := import("@platforma-sdk/workflow-tengo:pframes.constants")

self.defineOutputs(
	"result"
)

self.body(func(inputs) {
	value := inputs[pConstants.VALUE_FIELD_NAME]
	key := inputs[pConstants.KEY_FIELD_NAME]
	base := inputs.base
	nested := bool(inputs.nested)

	if !is_array(key) {
		ll.panic("key is not an array: %v", key)
	}

	result := is_undefined(base) ? 0 : base
	for k, v in value.inputs() {
		result += v.getValue().getDataAsJson()
	}

	if nested {
		wrapper := smart.mapBuilder()
		wrapper.addRef("nested", smart.createJsonResource(result))
		result = wrapper.build()
	}

	return {
		result: result
	}
})
