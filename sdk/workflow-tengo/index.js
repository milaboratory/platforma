module.exports = { Templates: {
  'exec.test.wd_processor_1': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/exec.test.wd_processor_1.plj.gz') },
  'pframes.aggregate': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/pframes.aggregate.plj.gz') },
  'pframes.export-single-pcolumn': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/pframes.export-single-pcolumn.plj.gz') },
  'pframes.import-dir': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/pframes.import-dir.plj.gz') },
  'pframes.map-pframe': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/pframes.map-pframe.plj.gz') },
  'pframes.test.agg_body_pure': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/pframes.test.agg_body_pure.plj.gz') },
  'pframes.test.ll.agg_1': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/pframes.test.ll.agg_1.plj.gz') },
  'test.file.simple1': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/test.file.simple1.plj.gz') },
  'test.import-template.concat_ab': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/test.import-template.concat_ab.plj.gz') },
  'test.import-template.pure-template': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/test.import-template.pure-template.plj.gz') },
  'test.kv.kv': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/test.kv.kv.plj.gz') },
  'test.resolve.concat_ab': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/test.resolve.concat_ab.plj.gz') },
  'test.resolve.eph-template': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/test.resolve.eph-template.plj.gz') },
  'test.resolve.pure-template': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/test.resolve.pure-template.plj.gz') },
  'test.software.software-info': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/test.software.software-info.plj.gz') },
  'tpl.test.await-state-1': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/tpl.test.await-state-1.plj.gz') },
  'tpl.test.await-state-match': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/tpl.test.await-state-match.plj.gz') },
  'tpl.test.await-state-wildcard': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/tpl.test.await-state-wildcard.plj.gz') },
  'tpl.test.json-keys': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/tpl.test.json-keys.plj.gz') },
  'tpl.test.map-outputs': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/tpl.test.map-outputs.plj.gz') },
  'tpl.test.simple1': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/tpl.test.simple1.plj.gz') },
  'workdir.save': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/workdir.save.plj.gz') },
  'workflow.build-ctx': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/workflow.build-ctx.plj.gz') },
  'workflow.test.exports.wf1': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/workflow.test.exports.wf1.plj.gz') },
  'workflow.test.exports.wf2': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/workflow.test.exports.wf2.plj.gz') },
  'workflow.test.wf1-prerun': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/workflow.test.wf1-prerun.plj.gz') },
  'workflow.test.wf1': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/workflow.test.wf1.plj.gz') },
  'workflow.test.wf2': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/workflow.test.wf2.plj.gz') },
  'exec.exec': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/exec.exec.plj.gz') },
  'exec.test.run_and_save_file_set': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/exec.test.run_and_save_file_set.plj.gz') },
  'exec.test.run_cat_on_file': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/exec.test.run_cat_on_file.plj.gz') },
  'exec.test.run_cat_on_value': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/exec.test.run_cat_on_value.plj.gz') },
  'exec.test.run_echo_to_stream': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/exec.test.run_echo_to_stream.plj.gz') },
  'exec.test.run_echo_to_value': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/exec.test.run_echo_to_value.plj.gz') },
  'exec.test.run_with_wd_processor': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/exec.test.run_with_wd_processor.plj.gz') },
  'pframes.export-multiple-pcolumns': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/pframes.export-multiple-pcolumns.plj.gz') },
  'pframes.export-pframe': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/pframes.export-pframe.plj.gz') },
  'pframes.import-xsv-map': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/pframes.import-xsv-map.plj.gz') },
  'pframes.test.xsv.import-csv-map': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/pframes.test.xsv.import-csv-map.plj.gz') },
  'pframes.test.xsv.import-csv': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/pframes.test.xsv.import-csv.plj.gz') },
  'test.import-template.workflow': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/test.import-template.workflow.plj.gz') },
  'test.resolve.wf': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/test.resolve.wf.plj.gz') },
  'test.resolve.wf_no_res': { type: 'from-file', path: require.resolve('./dist/tengo/tpl/test.resolve.wf_no_res.plj.gz') }
}}
