// /*
//  * Library provides development kit for ephemeral templates
//  */
// tx := import("tx")
// ll := import(":ll")
// plapi := import("plapi")

// constants := import(":constants")
// smart := import(":smart")

// //
// // Initialization
// //

// // Checking we were imported in compatible render template context
// renderer := smart.Resource(ll.getCurrentTemplateRenderer())
// if renderer.info().Type.Name != "EphRenderTemplate" {
// 	ll.panic("expected ephemeral render template got pure")
// }

// //
// // Definitions and exports
// //

// _initialOutputs := ll.toStrict(renderer.outputs())
// _newOutputs := ll.toStrict({})
// _outpus := {}

// _inputs := undefined

// inputs := func() {
// 	if _inputs == undefined {
// 		_inputs = ll.toStrict(renderer.get("inputs").inputs())
// 	}
// 	return _inputs
// }

// outputs := func() {
// 	if _outputs == undefined {
//         // TODO
//         _outputs = _initialOutputs
// 	}
// 	return _outputs
// }

// newOutput := func(name) {
//     field := smart.Field(ll.filedId(renderer.id, constants.TEMPLATE_OUTPUT_PREFIX + name))
//     _newOutputs[name] = field
//     return field
// }

// /**
//  * Defines main entry point for current template
//  */
// body := func(bodyFn) {

//     if renderer.into().AllInputsSet {
// 		inputMap := plapi.getInputMap()
// 		if inputMap.AllInputsSet {
// 			bodyFn()
// 		} else {
// 			tx.subscribeTo(inputMap.ID, "InputMapAllInputsSet", {"AllInputsSet": true})
// 		}
// 	} else if ll.isInitializing() {
//         tx.subscribeTo(renderer.id, "MainAllInputsSet", {"AllInputsSet": true})
// 	} 
// }

// export ll.toStrict({
// 	renderer: renderer,
// 	body: body,
// 	inputs: inputs,
// 	outputs: outputs
// })
