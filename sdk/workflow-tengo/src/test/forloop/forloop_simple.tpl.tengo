// forloop

self := import(":tpl")
smart := import(":smart")
exec := import(":exec")
file := import(":file")
forloop := import(":forloop")
ll := import(":ll")
assets := import(":assets")

self.defineOutputs(["concat", "concatReversed"])

self.body(func(inputs) {
	concatTpl := assets.importTemplate(":test.forloop.concat_abc")
	loop := forloop.runWithTemplate(concatTpl).
		addTemplateOutput("concat").
		addTemplateOutput("concatReversed").
		addStaticInput("a", "astring").
		addStaticInput("b", "bstring").
		setDynamicInputName("c").
		addDynamicInput("c1", "c11").
		addDynamicInput("c2", "c22").
		addDynamicInput("c3", "c33").
		build()

	result := {
		concat: loop.getOutput("concat"),
		concatReversed: loop.getOutput("concatReversed")
	}

	return result
})
