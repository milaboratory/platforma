/** Contains a builder for monetization when we need to run monetization without exec (e.g. in pre-run). */

oop := import(":oop")
ll := import(":ll")
validation := import(":validation")
monetization := import(":exec.monetization_internal")

builder := func(productKey) {
	mnz := monetization.init()
	monetization.enable(mnz, productKey)
	monetization.setDryRun(mnz, true)
	monetization.setSaveRemainingRuns(mnz, true)

	self := ll.toStrict({
		addFileParams: func(fileName, params) {
			ll.assert(is_string(fileName), "mnz.builder.addFileParams(): fileName must be a string")
			monetization.addFileParams(mnz, fileName, params)
			return self
		},

		build: func() {
			wd := workdir.builder().
				mkDirs(inputs.dirsToCreate).
				addFiles(inputs.filesToAdd).
				writeFiles(self.rawInputs().filesToWrite.getValue().inputs()).
				build()

			result := monetization.run(inputs.monetization, wd, "ui")
		}
	})

	return self
}
