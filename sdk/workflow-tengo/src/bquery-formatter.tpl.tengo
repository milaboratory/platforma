// Utility template to format bquery results

ll := import(":ll")
json := import("json")
maps := import(":maps")
self := import(":tpl")

// single output with json array [{ref: spec: data:}]
self.defineOutputs(["result"])

self.body(func(inputs) {

	result := []

	for ref, spec in inputs.spec {
		r  := {
			ref: json.decode(ref),
			spec: spec.getDataAsJson()
		}

		// only if the data is there
		if !is_undefined(inputs["data"]) {
			r["data"] = inputs.data[ref]
		}

		result = append(result, r)
	}

	if inputs.single {
		ll.assert(len(result) == 1, "expected single element, got ", len(result))

		result = result[0]
	}

	return {
		result: result
	}
})
