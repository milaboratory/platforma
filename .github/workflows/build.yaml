name: Build and Test NPM packages
on:
  workflow_dispatch: {}
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Generate Zen Artisan Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GH_ZEN_APP_ID }}
          private-key: ${{ secrets.GH_ZEN_APP_PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          submodules: ${{ inputs.checkout-submodules }}
          token: ${{ steps.app-token.outputs.token }}
      - name: Prepare environment for building a NodeJS application
        uses: milaboratory/github-ci/actions/node/prepare-pnpm@v4
        with:
          node-version: '20.x'
          cache-version: 'v1'
          pnpm-version: '9.10.0'
          npmrc-config: |
            {
            "registries": {
             "https://registry.npmjs.org/": {
               "scopes": ["milaboratories", "platforma-sdk"],
               "tokenVar": "NPMJS_TOKEN"
                 },
            "https://npm.pkg.github.com/": {
               "scopes": ["milaboratory"],
               "tokenVar": "NODE_AUTH_TOKEN"
                 }
               }
            }
      - name: Install NodeJS packages with pnpm
        uses: milaboratory/github-ci/actions/shell@v4
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPMJS_TOKEN: ${{ env.NPMJS_TOKEN  }}
        with:
          dump-stdout: false
          run: |
            pnpm install --frozen-lockfile --prefer-offline
      - name: Run changeset version
        uses: milaboratory/github-ci/actions/shell@v4
        with:
          run: |
            pnpm run version-packages
      - uses: milaboratory/github-ci/actions/git/verify-changed-files@v4
        id: changed-files
        with:
          files: |
            !node_modules/**/*
            etc/**/*
            lib/**/*
            sdk/**/*
            tests/**/*
            tools/**/*
      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
